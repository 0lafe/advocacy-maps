{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/davidondrich/dev/advocacy-maps/components/Map/Map.jsx\";\nimport React, { useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from \"react-leaflet\";\nimport Papa from \"papaparse\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-defaulticon-compatibility/dist/leaflet-defaulticon-compatibility.css\";\nimport \"leaflet-defaulticon-compatibility\";\n\nconst districtStyle = rep => ({\n  className: `district district--${rep.commitments ? \"committed\" : \"join\"}`\n});\n\nconst renderMap = () => {\n  Promise.all([fetch(\"https://docs.google.com/spreadsheets/d/e/2PACX-1vQ4l7bRcBIgwsEPGM_s9zF9csIeTgE2No_4tA6MuDCBUbfmWY_e9mAfzPpCJTsIK_hUzOyJ8CmdGMsX/pub?gid=641305740&single=true&output=csv\").then(response => response.text()).then(csv => {\n    const parsed = Papa.parse(csv, {\n      header: true,\n      dynamicTyping: true\n    });\n    return Promise.resolve(parsed.data);\n  }), fetch(\"https://raw.githubusercontent.com/bhrutledge/ma-legislature/main/dist/ma_house.geojson\").then(response => response.json())]).then(([supporters, houseFeatures]) => {\n    const supportersByDistrict = supporters.reduce((acc, cur) => {\n      acc[cur.district] = cur;\n      return acc;\n    }, {});\n    console.log(\"Supports\", supportersByDistrict);\n    console.log(\"HOUSE\", houseFeatures);\n    houseFeaturesGeoJsonData = houseFeatures;\n\n    function repProperties(feature) {\n      const supporter = supportersByDistrict[feature.properties.district];\n      return supporter;\n    }\n    /*\n    const houseLayer = L.geoJson(houseFeatures, {\n      style: (feature) => districtStyle(repProperties(feature)),\n      onEachFeature: (feature, layer) => {\n        const rep = repProperties(feature);\n        layer.bindPopup(districtPopup(rep));\n        layer.on(\"popupopen\", onPopup);\n        layer.on(\"popupclose\", onPopup);\n        feature.properties.index = `${rep.first_name} ${rep.last_name} - ${rep.district}`;\n      },\n    });\n     const searchControl = new L.Control.Search({\n      layer: houseLayer,\n      propertyName: \"index\",\n      initial: false,\n      marker: false,\n      textPlaceholder: \"Search reps and districts\",\n      moveToLocation(latlng, title, map) {\n        map.fitBounds(latlng.layer.getBounds());\n        latlng.layer.openPopup();\n      },\n    });\n     const legendControl = L.control({ position: \"topright\" });\n    legendControl.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"legend\");\n      div.innerHTML = districtLegend();\n      return div;\n    };\n     const map = L.map(\"map\")\n      .addLayer(L.tileLayer.provider(\"CartoDB.Positron\"))\n      .addLayer(houseLayer)\n      .addControl(searchControl)\n      .addControl(legendControl)\n      .fitBounds(houseLayer.getBounds());\n     // Avoid accidental excessive zoom out\n    map.setMinZoom(map.getZoom());\n    */\n\n  });\n};\n\nimport { Component } from \"react\";\nimport L from \"leaflet\";\n\nclass Map extends Component {\n  componentDidMount() {\n    // create map\n    this.map = L.map(\"map\", {\n      center: [49.8419, 24.0315],\n      zoom: 16,\n      layers: [L.tileLayer(\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\", {\n        attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      })]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/davidondrich/dev/advocacy-maps/components/Map/Map.jsx"],"names":["React","useEffect","MapContainer","TileLayer","Marker","Popup","GeoJSON","Papa","districtStyle","rep","className","commitments","renderMap","Promise","all","fetch","then","response","text","csv","parsed","parse","header","dynamicTyping","resolve","data","json","supporters","houseFeatures","supportersByDistrict","reduce","acc","cur","district","console","log","houseFeaturesGeoJsonData","repProperties","feature","supporter","properties","Component","L","Map","componentDidMount","map","center","zoom","layers","tileLayer","attribution","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,OAAjD,QAAgE,eAAhE;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,0BAAP;AACA,OAAO,8EAAP;AACA,OAAO,mCAAP;;AAEA,MAAMC,aAAa,GAAIC,GAAD,KAAU;AAC9BC,EAAAA,SAAS,EAAG,sBAAqBD,GAAG,CAACE,WAAJ,GAAkB,WAAlB,GAAgC,MAAO;AAD1C,CAAV,CAAtB;;AAIA,MAAMC,SAAS,GAAG,MAAM;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,CACVC,KAAK,CACH,0KADG,CAAL,CAGGC,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAISG,GAAD,IAAS;AACb,UAAMC,MAAM,GAAGb,IAAI,CAACc,KAAL,CAAWF,GAAX,EAAgB;AAAEG,MAAAA,MAAM,EAAE,IAAV;AAAgBC,MAAAA,aAAa,EAAE;AAA/B,KAAhB,CAAf;AACA,WAAOV,OAAO,CAACW,OAAR,CAAgBJ,MAAM,CAACK,IAAvB,CAAP;AACD,GAPH,CADU,EASVV,KAAK,CACH,wFADG,CAAL,CAEEC,IAFF,CAEQC,QAAD,IAAcA,QAAQ,CAACS,IAAT,EAFrB,CATU,CAAZ,EAYGV,IAZH,CAYQ,CAAC,CAACW,UAAD,EAAaC,aAAb,CAAD,KAAiC;AACvC,UAAMC,oBAAoB,GAAGF,UAAU,CAACG,MAAX,CAAkB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC3DD,MAAAA,GAAG,CAACC,GAAG,CAACC,QAAL,CAAH,GAAoBD,GAApB;AACA,aAAOD,GAAP;AACD,KAH4B,EAG1B,EAH0B,CAA7B;AAKAG,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,oBAAxB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,aAArB;AACAQ,IAAAA,wBAAwB,GAAGR,aAA3B;;AAEA,aAASS,aAAT,CAAuBC,OAAvB,EAAgC;AAC9B,YAAMC,SAAS,GAAGV,oBAAoB,CAACS,OAAO,CAACE,UAAR,CAAmBP,QAApB,CAAtC;AACA,aAAOM,SAAP;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKG,GApED;AAqED,CAtED;;AAwEA,SAASE,SAAT,QAA0B,OAA1B;AACA,OAAOC,CAAP,MAAc,SAAd;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKC,GAAL,GAAWH,CAAC,CAACG,GAAF,CAAM,KAAN,EAAa;AACtBC,MAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,OAAV,CADc;AAEtBC,MAAAA,IAAI,EAAE,EAFgB;AAGtBC,MAAAA,MAAM,EAAE,CACNN,CAAC,CAACO,SAAF,CAAY,yCAAZ,EAAuD;AACrDC,QAAAA,WAAW,EACT;AAFmD,OAAvD,CADM;AAHc,KAAb,CAAX;AAUD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAjByB;;AAoB5B,eAAeR,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from \"react-leaflet\";\nimport Papa from \"papaparse\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-defaulticon-compatibility/dist/leaflet-defaulticon-compatibility.css\";\nimport \"leaflet-defaulticon-compatibility\";\n\nconst districtStyle = (rep) => ({\n  className: `district district--${rep.commitments ? \"committed\" : \"join\"}`,\n});\n\nconst renderMap = () => {\n  Promise.all([\n    fetch(\n      \"https://docs.google.com/spreadsheets/d/e/2PACX-1vQ4l7bRcBIgwsEPGM_s9zF9csIeTgE2No_4tA6MuDCBUbfmWY_e9mAfzPpCJTsIK_hUzOyJ8CmdGMsX/pub?gid=641305740&single=true&output=csv\"\n    )\n      .then((response) => response.text())\n      .then((csv) => {\n        const parsed = Papa.parse(csv, { header: true, dynamicTyping: true });\n        return Promise.resolve(parsed.data);\n      }),\n    fetch(\n      \"https://raw.githubusercontent.com/bhrutledge/ma-legislature/main/dist/ma_house.geojson\"\n    ).then((response) => response.json()),\n  ]).then(([supporters, houseFeatures]) => {\n    const supportersByDistrict = supporters.reduce((acc, cur) => {\n      acc[cur.district] = cur;\n      return acc;\n    }, {});\n\n    console.log(\"Supports\", supportersByDistrict);\n    console.log(\"HOUSE\", houseFeatures);\n    houseFeaturesGeoJsonData = houseFeatures;\n\n    function repProperties(feature) {\n      const supporter = supportersByDistrict[feature.properties.district];\n      return supporter;\n    }\n\n    /*\n    const houseLayer = L.geoJson(houseFeatures, {\n      style: (feature) => districtStyle(repProperties(feature)),\n      onEachFeature: (feature, layer) => {\n        const rep = repProperties(feature);\n        layer.bindPopup(districtPopup(rep));\n        layer.on(\"popupopen\", onPopup);\n        layer.on(\"popupclose\", onPopup);\n        feature.properties.index = `${rep.first_name} ${rep.last_name} - ${rep.district}`;\n      },\n    });\n\n    const searchControl = new L.Control.Search({\n      layer: houseLayer,\n      propertyName: \"index\",\n      initial: false,\n      marker: false,\n      textPlaceholder: \"Search reps and districts\",\n      moveToLocation(latlng, title, map) {\n        map.fitBounds(latlng.layer.getBounds());\n        latlng.layer.openPopup();\n      },\n    });\n\n    const legendControl = L.control({ position: \"topright\" });\n    legendControl.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"legend\");\n      div.innerHTML = districtLegend();\n      return div;\n    };\n\n    const map = L.map(\"map\")\n      .addLayer(L.tileLayer.provider(\"CartoDB.Positron\"))\n      .addLayer(houseLayer)\n      .addControl(searchControl)\n      .addControl(legendControl)\n      .fitBounds(houseLayer.getBounds());\n\n    // Avoid accidental excessive zoom out\n    map.setMinZoom(map.getZoom());\n\t\t*/\n  });\n};\n\nimport { Component } from \"react\";\nimport L from \"leaflet\";\n\nclass Map extends Component {\n  componentDidMount() {\n    // create map\n    this.map = L.map(\"map\", {\n      center: [49.8419, 24.0315],\n      zoom: 16,\n      layers: [\n        L.tileLayer(\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\", {\n          attribution:\n            '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n        }),\n      ],\n    });\n  }\n\n  render() {\n    return <div id=\"map\"></div>;\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}